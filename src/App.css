/* ===========  RoutesCSS ===========*/

.RoutesContainer {
  /* background-color: blue; */
  padding-left: 2vw;
  display: grid;
  grid-template-rows: 10% 90%;
  grid-template-areas: "profile" "routes";
}

.Routes_ProfileAndSearchBar {
  grid-area: profile;
  /* background-color: red; */
  padding-right: 2vw;
}

.RoutesContainer div:nth-child(2) {
  grid-area: routes;
  /* background-color: red; */
}
/* =========== END RoutesCSS ===========*/

/* ===========  DashboardCSS ===========*/

.dashboardContainer {
  display: grid;
  height: 100%;
  grid-template-rows: 13vh 40vh 33vh;
  grid-template-columns: 25% 25% 25% 25%;
  grid-template-areas: "header header header header" "received received received mostviewed" "outstanding outstanding revenueCard expenesCard";
}

.dashboardContainer div:nth-child(1) {
  grid-area: header;
  /* background-color: rebeccapurple; */
}

.dashboardContainer div:nth-child(2) {
  grid-area: received;
  /* background-color: red; */
}
.dashboardContainer div:nth-child(3) {
  grid-area: mostviewed;
  /* background-color: firebrick; */
}
.dashboardContainer div:nth-child(4) {
  grid-area: outstanding;
  /* background-color: teal; */
}
.dashboardContainer div:nth-child(5) {
  grid-area: revenueCard;
  /* background-color: orangered; */
}
.dashboardContainer div:nth-child(6) {
  grid-area: expenesCard;
  /* background-color: orangered; */
}
.commonPadding {
  padding: 2dvh 2% 2dvh 2%;
}

/* =========== END DashboardCSS ===========*/

/* =============**RECENT PAYMENT RECEIVED**======= */
.recentPaymentReceive {
  display: grid;
  grid-template-columns: 100%;
  grid-template-rows: 20% 80%;
  grid-template-areas: "header" "stats";
}
.recentPaymentReceive div:nth-child(1) {
  grid-area: header;
  /* background-color: aqua; */
}
.recentPaymentReceive div:nth-child(2) {
  grid-area: stats;
  /* background-color: black; */
}

/* YourComponent.css */
:root {
  --scrollbar-width: 8px;
}

.PaymentReceivedScroll::-webkit-scrollbar {
  width: var(--scrollbar-width);
}

.PaymentReceivedScroll::-webkit-scrollbar-thumb {
  background-color: #888;
  border-radius: 4px;
  transition: background-color 0.3s;
}
.PaymentReceivedScroll:not(:hover)::-webkit-scrollbar-thumb {
  background-color: transparent;
}

.PaymentReceivedScroll::-webkit-scrollbar-thumb:hover {
  background-color: #555;
}
/* .MuiBox-root css-hxfpyy */
.PaymentReceivedScroll {
  overflow-y: scroll;
  scrollbar-gutter: stable both-edges;
}

/* =============**END OF RECENT PAYMENT RECEIVED**======= */

/* ==================***TOTAL Revenue***** */
.totalRevenue {
  display: grid;
  grid-template-columns: 60% 40%;
  grid-template-rows: 55% 45%;
  grid-template-areas: "header graph" "stats stats";
}
.totalRevenue div:nth-child(1) {
  grid-area: header;
  /* background-color: aqua; */
}
.totalRevenue div:nth-child(2) {
  grid-area: graph;
  /* background-color: black; */
}
.totalRevenue div:nth-child(3) {
  grid-area: stats;
  /* background-color: green; */
}
/* =====================***End of Total Revenue** */
.Leases {
  display: grid;
  /* grid-template-columns: 100%; */
  grid-template-rows: 20% 80%;
  grid-template-areas: "header" "info";
}
.Leases div:nth-child(1) {
  grid-area: header;
  /* background-color: aqua; */
}
.Leases div:nth-child(2) {
  grid-area: info;
  /* background-color: rgb(161, 110, 110); */
  /* overflow-y: scroll; */
}
.leasesOutstandingBalnce {
  display: flex;
  align-items: center;
  justify-content: space-between;
}

/* ==============   Total Sales  =================== */
.flexBTN {
  display: flex;
  align-items: center;
  gap: 4.5rem;
}
/* ============== End   Total Sales  =================== */

.image {
  display: grid;
  grid-template-rows: 10% 60% 30%;
  grid-template-areas: "up" "header" "stat";
}
.image div:nth-child(1) {
  grid-area: header;
  background-color: aqua;
}
.image div:nth-child(2) {
  grid-area: stat;
  /* background-color: rgb(161, 110, 110); */
}
.image div:nth-child(3) {
  grid-area: up;
  /* background-color: blueviolet; */
}
.askingPrice {
  color: #f8c99f;
}

/* ================**Property DashBoard**=========== */
.propertyContainer {
  display: grid;
  grid-template-rows: 20% 80%;
  grid-template-columns: 1fr;
  grid-template-areas: "prop1" "prop2";
  height: 100%;
}

.propertyContainer div:nth-child(1) {
  grid-area: prop1;
  /* background-color: aqua; */
}
.propertyContainer div:nth-child(2) {
  grid-area: prop2;
  /* background-color: rgb(161, 110, 110); */
}

/* ========================****Table for Property ************** */
.property {
  display: flex;
  align-items: center;
  gap: 1rem;
  justify-content: flex-start;
}
.location {
  display: flex;
  align-items: center;
}
.office {
  display: flex;
  align-items: center;
  justify-content: start;
}
.propertyColor {
  background-color: black;
  color: aliceblue;
  height: 5vh;
}

/* propertyItem */
.propertyItem:hover {
  cursor: pointer;
}
/* add tenant modal */
.close_icon:hover {
  color: red;
  cursor: pointer;
}

/* propertyTypeSelect */
.propertyTypeSelect span {
  color: aqua;
}

/* PROPERTY TASKS */

.taskGrid {
  display: grid;
  height: 100%;
  grid-template-columns: 100%;
  grid-template-areas: "header" "received";
  row-gap: 1em;
  grid-template-columns: minmax(200px, auto);
}
.taskGrid > div {
  padding: 0.5em;
}

.taskGrid div:nth-child(1) {
  grid-area: header;
  /* background-color: rebeccapurple; */
}

.taskGrid div:nth-child(2) {
  grid-area: received;
  /* background-color: red; */
}
/* ========================================== */
.classforTask {
  display: grid;
  height: 100%;
  grid-template-columns: 50% 50%;
  grid-template-areas: "header received" "header received";
  /* row-gap: 1em; */
  /* grid-template-columns: minmax(200px, auto); */
}
.classforTask div:nth-child(1) {
  grid-area: header;
  /* background-color: rebeccapurple; */
}
.classforTask > div {
  padding: 1.5em;
}

.classforTask div:nth-child(2) {
  grid-area: received;
}
.taskRequest {
  display: flex;
  align-items: center;
  justify-content: space-between;
  /* background: #888; */
  border-radius: 5px;
  font-size: 15px;
}
.taskIcons {
  display: flex;
  justify-content: center;
  align-items: center;
  gap: 0.2em;
}
.gridforTask {
  background: #d8cece;
  border-radius: 5px;
  display: grid;
  grid-template-rows: 50% 50%;
  grid-template-areas: "down" "up";
  grid-template-rows: minmax(50px, auto);
}
.gridforTask:hover {
  box-shadow: "0px 4px 6px rgba(0, 0, 0, 0.3)";
}

.gridforTask div:nth-child(1) {
  grid-area: down;
  box-shadow: "0px 2px 4px rgba(0, 0, 0, 0.2)";
  /* background-color: red; */
}
.gridforTask div:nth-child(2) {
  grid-area: up;
  box-shadow: "0px 2px 4px rgba(0, 0, 0, 0.2)";
  /* background-color: green; */
}
/* ========================**Tasks Table**** */
.tasksPriority {
  display: flex;
  gap: 1rem;
  font-size: 15px;
}
.tasksNumber {
  display: flex;
  gap: 0.5rem;
  align-items: center;
  font-size: 12px;
}
.tasksPropertyLocation {
  display: flex;
  font-size: 12px;

  align-items: center;
  background: #f8c99f;
  border-radius: 10px;
}
.tasks {
  display: flex;
  align-items: center;
  gap: 0.5rem;
  font-size: 15px;

  justify-content: flex-start;
}
.tasksHouseName {
  display: flex;
  justify-content: flex-start;
  font-size: 12px;
}
.tasksUsers {
  display: flex;
  align-items: center;
  gap: 0.2rem;
  font-size: 15px;
  justify-content: center;
  /* border-radius: 10px; */
}

.tasksUsersName {
  font-size: 15px;
  display: flex;
  flex-direction: column;
}
.tasksUsersDate {
  display: flex;
  align-items: center;
  font-size: 13px;
  justify-content: center;
}
.dateAndTime {
  display: flex;
  align-items: center;
  gap: 0.2rem;
  font-size: 13px;
}
/* ================**Tenants */
.tenants {
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: 12px;
  gap: 0.5rem;
}
.futureTenants {
  display: flex;
  align-items: center;
  /* gap: 0.1rem; */
  justify-content: flex-start;
}
.tenantLocation {
  display: flex;
  align-items: center;
}
.tenantsPriority {
  display: flex;
  align-items: center;
  gap: 0.1rem;
  font-size: 500;
  font-size: 15px;
}
.tenantContact {
  display: flex;
  align-items: center;
  gap: 0.2rem;
  font-size: 13px;
  color: red;
  font-size: 15px;
  font-size: 500;
}
.leaseAmount {
  display: flex;
  font-size: 15px;
  font-size: 500;
  align-items: center;
}
.leaseRent {
  display: flex;
  align-items: center;
  font-size: 500;
}
/* ==================================== */
.scrollable-content {
  max-height: 200px; /* Adjust the max height as needed */
  overflow-y: auto;
}
/* =========================== */
.scrollable-content::-webkit-scrollbar {
  width: var(--scrollbar-width);
}

.scrollable-content::-webkit-scrollbar-thumb {
  background-color: #888;
  border-radius: 4px;
  transition: background-color 0.3s;
}
.scrollable-content:not(:hover)::-webkit-scrollbar-thumb {
  background-color: transparent;
}

.scrollable-content::-webkit-scrollbar-thumb:hover {
  background-color: #555;
}
/* =========== UTILITY BILLING */
.utility {
  display: flex;
  flex-direction: column;
  align-items: stretch;
  padding: 5px;
}
.period {
  display: flex;
  flex-direction: column;
  align-items: start;
}
.currentBilling {
  display: flex;
  flex-direction: column;
  align-items: start;
  padding: 8px;
}
/* ===========**Files***** */
.Propertynotes {
  display: grid;
  grid-template-columns: 35% 65%;
  grid-template-rows: 100%;
  grid-template-areas: "leftside rightside";
  height: 100%;
  column-gap: 0.5em;
}
.Propertynotes > div {
  padding: 1em;
}
.Propertynotes div:nth-child(1) {
  grid-area: leftside;
  /* background: peru; */
}
.Propertynotes div:nth-child(2) {
  grid-area: rightside;
  /* background: red; */
}

/* ============= */
.leftStickyNote {
  display: grid;
  grid-template-columns: 100%;
  grid-template-areas: "leftside";
  height: 100%;
  /* width: 50%; */
}
.leftStickyNote div:nth-child(1) {
  grid-area: leftside;
  /* background: black; */
}
/* ============== Header for sticky note **** */
.stickyHeader {
  display: grid;
  grid-template-columns: 100%;
  grid-template-rows: 10% 20% 70%;
  grid-template-areas: "head" "title" "body";
  grid-template-columns: minmax(100px, auto);
  height: 100%;
}
.stickyHeader > div {
  padding: 1em;
}

.stickyHeader div:nth-child(1) {
  grid-area: head;
  /* background: violet; */
}
.stickyHeader div:nth-child(2) {
  grid-area: title;
  /* background: green; */
}
.stickyHeader div:nth-child(3) {
  grid-area: body;
  /* background: yellow; */
}
/* =======================stickyRight */
.rightStickyNote {
  display: grid;
  grid-template-columns: 50% 50%;
  grid-template-rows: 50% 50%;
  grid-template-areas: "leftside rightside" "down up";
  height: 100%;
  column-gap: 0.5em;
  row-gap: 0.5em;
  grid-template-columns: minmax(200px, auto);
}

.rightStickyNote div:nth-child(1) {
  grid-area: leftside;
  /* background: blue; */
}
.rightStickyNote div:nth-child(2) {
  grid-area: rightside;
  /* background: yellow; */
}
.rightStickyNote div:nth-child(3) {
  grid-area: up;
  /* background: violet; */
}
.rightStickyNote div:nth-child(4) {
  grid-area: down;
  /* background: green; */
}
/* =============== */
.cardGrid {
  display: grid;
  grid-template-columns: 100%;
  grid-template-rows: 20% 65% 15%;
  grid-template-areas: "leftside" "rightside" "up";
  height: 100%;
  grid-template-rows: minmax(60px);
}

.cardGrid div:nth-child(1) {
  grid-area: leftside;
  /* background: brown; */
}
.cardGrid div:nth-child(2) {
  grid-area: rightside;
  /* background: yellow; */
}
.cardGrid div:nth-child(3) {
  grid-area: up;
  /* background: violet; */
}
/* =================================== */
